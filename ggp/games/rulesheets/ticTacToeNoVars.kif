;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Tictactoe (encoded without variables);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ROLE Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(role xPlayer)(role oPlayer);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; INIT Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(init (control xPlayer));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; LEGAL Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (legal xPlayer noop)    (true (control oPlayer)))(<= (legal xPlayer (play 1 1 x))    (true (control xPlayer))	(emptyCell 1 1))(<= (legal xPlayer (play 1 2 x))    (true (control xPlayer))	(emptyCell 1 2))(<= (legal xPlayer (play 1 3 x))    (true (control xPlayer))	(emptyCell 1 3))(<= (legal xPlayer (play 2 1 x))    (true (control xPlayer))	(emptyCell 2 1))(<= (legal xPlayer (play 2 2 x))    (true (control xPlayer))	(emptyCell 2 2))(<= (legal xPlayer (play 2 3 x))    (true (control xPlayer))	(emptyCell 2 3))(<= (legal xPlayer (play 3 1 x))    (true (control xPlayer))	(emptyCell 3 1))(<= (legal xPlayer (play 3 2 x))    (true (control xPlayer))	(emptyCell 3 2))(<= (legal xPlayer (play 3 3 x))    (true (control xPlayer))	(emptyCell 3 3))(<= (legal oPlayer noop)    (true (control xPlayer)))(<= (legal oPlayer (play 1 1 o))    (true (control oPlayer))	(emptyCell 1 1))(<= (legal oPlayer (play 1 2 o))    (true (control oPlayer))	(emptyCell 1 2))(<= (legal oPlayer (play 1 3 o))    (true (control oPlayer))	(emptyCell 1 3))(<= (legal oPlayer (play 2 1 o))    (true (control oPlayer))	(emptyCell 2 1))(<= (legal oPlayer (play 2 2 o))    (true (control oPlayer))	(emptyCell 2 2))(<= (legal oPlayer (play 2 3 o))    (true (control oPlayer))	(emptyCell 2 3))(<= (legal oPlayer (play 3 1 o))    (true (control oPlayer))	(emptyCell 3 1))(<= (legal oPlayer (play 3 2 o))    (true (control oPlayer))	(emptyCell 3 2))(<= (legal oPlayer (play 3 3 o))    (true (control oPlayer))	(emptyCell 3 3));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; NEXT Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (next (mark 1 1 x))    (role xPlayer)    (does xPlayer (play 1 1 x)))(<= (next (mark 1 2 x))    (role xPlayer)    (does xPlayer (play 1 2 x)))(<= (next (mark 1 3 x))    (role xPlayer)    (does xPlayer (play 1 3 x)))(<= (next (mark 2 1 x))    (role xPlayer)    (does xPlayer (play 2 1 x)))(<= (next (mark 2 2 x))    (role xPlayer)    (does xPlayer (play 2 2 x)))(<= (next (mark 2 3 x))    (role xPlayer)    (does xPlayer (play 2 3 x)))(<= (next (mark 3 1 x))    (role xPlayer)    (does xPlayer (play 3 1 x)))(<= (next (mark 3 2 x))    (role xPlayer)    (does xPlayer (play 3 2 x)))(<= (next (mark 3 3 x))    (role xPlayer)    (does xPlayer (play 3 3 x)))(<= (next (mark 1 1 o))    (role oPlayer)    (does oPlayer (play 1 1 o)))(<= (next (mark 1 2 o))    (role oPlayer)    (does oPlayer (play 1 2 o)))(<= (next (mark 1 3 o))    (role oPlayer)    (does oPlayer (play 1 3 o)))(<= (next (mark 2 1 o))    (role oPlayer)    (does oPlayer (play 2 1 o)))(<= (next (mark 2 2 o))    (role oPlayer)    (does oPlayer (play 2 2 o)))(<= (next (mark 2 3 o))    (role oPlayer)    (does oPlayer (play 2 3 o)))(<= (next (mark 3 1 o))    (role oPlayer)    (does oPlayer (play 3 1 o)))(<= (next (mark 3 2 o))    (role oPlayer)    (does oPlayer (play 3 2 o)))(<= (next (mark 3 3 o))    (role oPlayer)    (does oPlayer (play 3 3 o)))(<= (next (mark 1 1 x))    (true (mark 1 1 x)))(<= (next (mark 1 2 x))    (true (mark 1 2 x)))(<= (next (mark 1 3 x))    (true (mark 1 3 x)))(<= (next (mark 2 1 x))    (true (mark 2 1 x)))(<= (next (mark 2 2 x))    (true (mark 2 2 x)))(<= (next (mark 2 3 x))    (true (mark 2 3 x)))(<= (next (mark 3 1 x))    (true (mark 3 1 x)))(<= (next (mark 3 2 x))    (true (mark 3 2 x)))(<= (next (mark 3 3 x))    (true (mark 3 3 x)))(<= (next (mark 1 1 o))    (true (mark 1 1 o)))(<= (next (mark 1 2 o))    (true (mark 1 2 o)))(<= (next (mark 1 3 o))    (true (mark 1 3 o)))(<= (next (mark 2 1 o))    (true (mark 2 1 o)))(<= (next (mark 2 2 o))    (true (mark 2 2 o)))(<= (next (mark 2 3 o))    (true (mark 2 3 o)))(<= (next (mark 3 1 o))    (true (mark 3 1 o)))(<= (next (mark 3 2 o))    (true (mark 3 2 o)))(<= (next (mark 3 3 o))    (true (mark 3 3 o)))(<= (next (control xPlayer))    (true (control oPlayer)))(<= (next (control oPlayer))    (true (control xPlayer)));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; TERMINAL Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= terminal    (line x))(<= terminal    (line o))(<= terminal    (not open));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; GOAL Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (goal xPlayer 100)    (line x))(<= (goal xPlayer 50)    (not (line x))    (not (line o))    (not open))(<= (goal xPlayer 0)    (line o))(<= (goal xPlayer 0)    (not (line x))    (not (line o))    open)(<= (goal oPlayer 100)    (line o))(<= (goal oPlayer 50)    (not (line x))    (not (line o))    (not open))(<= (goal oPlayer 0)    (line x))(<= (goal oPlayer 0)    (not (line x))    (not (line o))    open);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; View Definitions;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(<= (row 1 x)    (true (mark 1 1 x))    (true (mark 1 2 x))    (true (mark 1 3 x)))(<= (row 2 x)    (true (mark 2 1 x))    (true (mark 2 2 x))    (true (mark 2 3 x)))(<= (row 3 x)    (true (mark 3 1 x))    (true (mark 3 2 x))    (true (mark 3 3 x)))(<= (row 1 o)    (true (mark 1 1 o))    (true (mark 1 2 o))    (true (mark 1 3 o)))(<= (row 2 o)    (true (mark 2 1 o))    (true (mark 2 2 o))    (true (mark 2 3 o)))(<= (row 3 o)    (true (mark 3 1 o))    (true (mark 3 2 o))    (true (mark 3 3 o)))(<= (col 1 x)    (true (mark 1 1 x))    (true (mark 2 1 x))    (true (mark 3 1 x)))(<= (col 2 x)    (true (mark 1 2 x))    (true (mark 2 2 x))    (true (mark 3 2 x)))(<= (col 3 x)    (true (mark 1 3 x))    (true (mark 2 3 x))    (true (mark 3 3 x)))(<= (col 1 o)    (true (mark 1 1 o))    (true (mark 2 1 o))    (true (mark 3 1 o)))(<= (col 2 o)    (true (mark 1 2 o))    (true (mark 2 2 o))    (true (mark 3 2 o)))(<= (col 3 o)    (true (mark 1 3 o))    (true (mark 2 3 o))    (true (mark 3 3 o)))(<= (diag x)    (true (mark 1 1 x))    (true (mark 2 2 x))    (true (mark 3 3 x)))(<= (diag o)    (true (mark 1 1 o))    (true (mark 2 2 o))    (true (mark 3 3 o)))(<= (diag x)    (true (mark 1 3 x))    (true (mark 2 2 x))    (true (mark 3 1 x)))(<= (diag o)    (true (mark 1 3 o))    (true (mark 2 2 o))    (true (mark 3 1 o)))(<= (line x)    (index 1)    (row 1 x))(<= (line x)    (index 2)    (row 2 x))(<= (line x)    (index 3)    (row 3 x))(<= (line o)    (index 1)    (row 1 o))(<= (line o)    (index 2)    (row 2 o))(<= (line o)    (index 3)    (row 3 o))(<= (line x)    (index 1)    (col 1 x))(<= (line x)    (index 2)    (col 2 x))(<= (line x)    (index 3)    (col 3 x))(<= (line o)    (index 1)    (col 1 o))(<= (line o)    (index 2)    (col 2 o))(<= (line o)    (index 3)    (col 3 o))(<= (line x)        (diag x))(<= (line o)        (diag o))(<= (emptyCell 1 1)    (index 1)    (index 1)    (not (true (mark 1 1 x)))    (not (true (mark 1 1 o))))(<= (emptyCell 1 2)    (index 1)    (index 2)    (not (true (mark 1 2 x)))    (not (true (mark 1 2 o))))(<= (emptyCell 1 3)    (index 1)    (index 3)    (not (true (mark 1 3 x)))    (not (true (mark 1 3 o))))(<= (emptyCell 2 1)    (index 2)    (index 1)    (not (true (mark 2 1 x)))    (not (true (mark 2 1 o))))(<= (emptyCell 2 2)    (index 2)    (index 2)    (not (true (mark 2 2 x)))    (not (true (mark 2 2 o))))(<= (emptyCell 2 3)    (index 2)    (index 3)    (not (true (mark 2 3 x)))    (not (true (mark 2 3 o))))(<= (emptyCell 3 1)    (index 3)    (index 1)    (not (true (mark 3 1 x)))    (not (true (mark 3 1 o))))(<= (emptyCell 3 2)    (index 3)    (index 2)    (not (true (mark 3 2 x)))    (not (true (mark 3 2 o))))(<= (emptyCell 3 3)    (index 3)    (index 3)    (not (true (mark 3 3 x)))    (not (true (mark 3 3 o))))(<= open        (emptyCell 1 1))(<= open        (emptyCell 1 2))(<= open        (emptyCell 1 3))(<= open        (emptyCell 2 1))(<= open        (emptyCell 2 2))(<= open        (emptyCell 2 3))(<= open        (emptyCell 3 1))(<= open        (emptyCell 3 2))(<= open        (emptyCell 3 3))    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Static Relations;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(index 1) (index 2) (index 3)( base control ( val oplayer xplayer ) )
( base mark ( val 1 2 3 ) ( val 1 2 3 ) ( val o x ) )
