;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;; Snake (two games in parallel)
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ROLE Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(role snake)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; INIT Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(init (stepCount 0))

(init (cell 1 1 1 snake))
(init (cell 2 1 1 snake))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; LEGAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (legal snake (up ?i))
	(true (cell ?i ?x 1 snake)))
(<= (legal snake (up ?i))
	(true (cell ?i ?x 2 snake)))
(<= (legal snake (up ?i))
	(true (cell ?i ?x 3 snake)))

(<= (legal snake (down ?i))
	(true (cell ?i ?x 2 snake)))
(<= (legal snake (down ?i))
	(true (cell ?i ?x 3 snake)))
(<= (legal snake (down ?i))
	(true (cell ?i ?x 4 snake)))

(<= (legal snake (right ?i))
	(true (cell ?i 1 ?y snake)))
(<= (legal snake (right ?i))
	(true (cell ?i 2 ?y snake)))
(<= (legal snake (right ?i))
	(true (cell ?i 3 ?y snake)))

(<= (legal snake (left ?i))
	(true (cell ?i 2 ?y snake)))
(<= (legal snake (left ?i))
	(true (cell ?i 3 ?y snake)))
(<= (legal snake (left ?i))
	(true (cell ?i 4 ?y snake)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; NEXT Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (next (stepCount ?newCount))
	(true (stepCount ?oldCount))
	(plus 1 ?oldCount ?newCount))

(<= (next (cell ?i ?x ?y body))
	(true (cell ?i ?x ?y body)))
(<= (next (cell ?i ?x ?y body))
	(true (cell ?i ?x ?y snake))
	(moves ?i))

(<= (next (cell ?i ?x ?y snake))
	(true (cell ?i ?x ?y snake))
	(not (moves ?i)))
(<= (next (cell ?i ?x ?y2 snake))
	(true (cell ?i ?x ?y1 snake))
	(does snake (up ?i))
	(plus 1 ?y1 ?y2))
(<= (next (cell ?i ?x ?y2 snake))
	(true (cell ?i ?x ?y1 snake))
	(does snake (down ?i))
	(plus 1 ?y2 ?y1))
(<= (next (cell ?i ?x2 ?y snake))
	(true (cell ?i ?x1 ?y snake))
	(does snake (right ?i))
	(plus 1 ?x1 ?x2))
(<= (next (cell ?i ?x2 ?y snake))
	(true (cell ?i ?x1 ?y snake))
	(does snake (left ?i))
	(plus 1 ?x2 ?x1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; TERMINAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= terminal
	(collision 1))
(<= terminal
	(collision 2))
(<= terminal
	(true (stepCount 20)))
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; GOAL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (goal snake 100)
	(not (open 1)))
(<= (goal snake 100)
	(not (open 2)))
(<= (goal snake 0)
	(open 1)
	(open 2))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; View Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (collision ?i)
	(true (cell ?i ?x ?y snake))
	(true (cell ?i ?x ?y body)))
	
(<= (open ?i)
	(x ?x)
	(y ?y)	
	(not (true (cell ?i ?x ?y snake)))
	(not (true (cell ?i ?x ?y body))))

(<= (moves ?i)
	(does snake (up ?i)))
(<= (moves ?i)
	(does snake (down ?i)))
(<= (moves ?i)
	(does snake (left ?i)))
(<= (moves ?i)
	(does snake (right ?i)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Static Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(index 1) (index 2)
(x 1) (x 2) (x 3) (x 4)
(y 1) (y 2) (y 3) (y 4)
(dir up) (dir down) (dir left) (dir right)

(plus 1  0  1)
(plus 1  1  2)
(plus 1  2  3)
(plus 1  3  4)
(plus 1  4  5)
(plus 1  5  6)
(plus 1  6  7)
(plus 1  7  8)
(plus 1  8  9)
(plus 1  9 10)
(plus 1 10 11)
(plus 1 11 12)
(plus 1 12 13)
(plus 1 13 14)
(plus 1 14 15)
(plus 1 15 16)
(plus 1 16 17)
(plus 1 17 18)
(plus 1 18 19)
(plus 1 19 20)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Base Tags
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(base cell (index 1 2) (x 1 2 3 4) (y 1 2 3 4) (contents snake body))
(base stepCount (val 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))