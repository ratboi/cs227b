;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Hodgepodge;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    (role white)    (role black)        ;;;;    (init (clear b))    (init (clear c))    (init (on c a))    (init (table a))    (init (table b))        (init (cell a))    (init (gold c))    (init (step 1))        ;;;;    (<= (conn ?x ?y) (affects ?x ?z) (affects ?y ?z))      (<= (affects ?x ?z) (trans ?x ?y ?z))    (<= (affects ?y ?z) (trans ?x ?y ?z))    (<= (affects ?x ?z) (trans ?x ?y ?w) (affects ?w ?z))    (<= (affects ?y ?z) (trans ?x ?y ?w) (affects ?w ?z))    ;;;;    (<= (next (on ?x ?y))        (does white (s ?x ?y)))        (<= (next (on ?x ?y))        (does white (s ?u ?v))        (true (on ?x ?y)))        (<= (next (table ?x))        (does white (s ?u ?v))        (true (table ?x))        (distinct ?u ?x))        (<= (next (clear ?y))        (does white (s ?u ?v))        (true (clear ?y))        (distinct ?v ?y))        (<= (next (on ?x ?y))        (does white (u ?u ?v))        (true (on ?x ?y))        (distinct ?u ?x))        (<= (next (table ?x))        (does white (u ?x ?y)))        (<= (next (table ?x))        (does white (u ?u ?v))        (true (table ?x)))        (<= (next (clear ?y))        (does white (u ?x ?y)))        (<= (next (clear ?x))        (does white (u ?u ?v))        (true (clear ?x)))          (<= (next (cell ?y))      (does black move)      (true (cell ?x))      (adjacent ?x ?y))  (<= (next (cell ?x))      (does black grab)      (true (cell ?x)))  (<= (next (cell ?x))      (does black drop)      (true (cell ?x)))  (<= (next (gold ?x))      (does black move)      (true (gold ?x)))  (<= (next (gold i))      (does black grab)      (true (cell ?x))      (true (gold ?x)))  (<= (next (gold i))      (does black grab)      (true (gold i)))  (<= (next (gold ?y))      (does black grab)      (true (cell ?x))      (true (gold ?y))      (distinct ?x ?y))  (<= (next (gold ?x))      (does black drop)      (true (cell ?x))      (true (gold i)))  (<= (next (gold ?x))      (does black drop)      (true (gold ?x))      (distinct ?x i))    (<= (next (step ?y))        (true (step ?x))        (successor ?x ?y))        (adjacent a b)    (adjacent b c)    (adjacent c d)    (adjacent d a)  (successor 1 2)  (successor 2 3)  (successor 3 4)  (successor 4 5)  (successor 5 6)  (successor 6 7)  (successor 7 8)  (successor 8 9)        ;;;;    (<= (legal white (s ?x ?y))        (true (clear ?x))        (true (table ?x))        (true (clear ?y))        (distinct ?x ?y))        (<= (legal white (u ?x ?y))        (true (clear ?x))        (true (on ?x ?y)))    (<= (legal black move))    (<= (legal black grab)        (true (cell ?x))        (true (gold ?x)))    (<= (legal black drop)        (true (gold i)))        ;;;;    (<= (goal white 100)        (true (on a b))        (true (on b c)))        (<= (goal white 0)        (not (true (on a b))))        (<= (goal white 0)        (not (true (on b c))))        (<= (goal black 100)        (true (gold a)))    (<= (goal black 0)        (true (gold ?x))        (distinct ?x a))    ;;;;    (<= terminal        (true (step 2)))        (<= terminal        (true (on a b))        (true (on b c))        (true (gold a)));;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;( base on ( val a b c ) ( val a b c ) )
( base table ( val a b c ) )
( base cell ( val a b c d ) )
( base gold ( val a b c d i ) )
( base clear ( val a b c ) )
( base step ( val 1 2 3 4 5 6 7 8 9 ) )
